# -*- coding: utf-8 -*-
"""chatBot

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wx4HW0-KCsk7kMMpHbImGyLyUuzzexFi
"""

#response function
import random
def random_string():
    random_list = [
        "Please try writing something more descriptive.",
        "Oh! It appears you wrote something I don't understand yet",
        "Do you mind trying to rephrase that?",
        "I'm terribly sorry, I didn't quite catch that.",
        "I can't answer that yet, please try asking something else."
    ]

    list_count = len(random_list)
    random_item = random.randrange(list_count)

    return random_list[random_item]

#import important  libraries
import random
import re

#load json file
def load_json(file):
    with open(file) as bot_respons:
        print(f"loaded '{file}' successfully")
        return json.load(bot_respons)

# load dataset
data_set = load_json("chat_bot.json")

# build our chatbot
def forward_response(string):
    message = re.split(r'\s+|[,;?!.-]\s*', string.lower())
    score_list = []

    for data_item in data_set:
        response = 0
        required = 0
        required_words = data_item["required_words"]

        if required_words:
            for word in message:
                if word in required_words:
                    required += 1

        if required == len(required_words):
            for word in message:
                if word in data_item["user_input"]:
                    response += 1

        score_list.append(response)

    final_response = max(score_list)
    index = score_list.index(final_response)

    if string == "":
        return "Please write specific words"

    if final_response != 0:
        return data_set[index]["bot_response"]

    if final_response != 0:
        return data_set[index]["bot_response"]

    return responses.random_string()

# test and see results
while True:
    input_q = input("You: ")
    if input_q.lower() in ["exit", "quit"]:
        break
    print("Bot: ", forward_response(input_q))